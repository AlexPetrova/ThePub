// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThePub.Data;

namespace ThePub.Data.Migrations
{
    [DbContext(typeof(PubDbContext))]
    [Migration("20200501112014_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ThePub.Data.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MealTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MealTypeId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MealTypeId = 1,
                            Name = "Simple Tomato Soup"
                        },
                        new
                        {
                            Id = 2,
                            MealTypeId = 1,
                            Name = "Potato Soup"
                        },
                        new
                        {
                            Id = 3,
                            MealTypeId = 1,
                            Name = "Spinach Salad"
                        },
                        new
                        {
                            Id = 4,
                            MealTypeId = 1,
                            Name = "Roasted Brussels Sprouts"
                        },
                        new
                        {
                            Id = 5,
                            MealTypeId = 1,
                            Name = "Taco Soup"
                        },
                        new
                        {
                            Id = 6,
                            MealTypeId = 1,
                            Name = "Italian Sausage Soup with Tortellini"
                        },
                        new
                        {
                            Id = 7,
                            MealTypeId = 1,
                            Name = "Delicious Ham and Potato Soup"
                        },
                        new
                        {
                            Id = 8,
                            MealTypeId = 1,
                            Name = "Chicken Tortilla Soup"
                        },
                        new
                        {
                            Id = 9,
                            MealTypeId = 1,
                            Name = "Chicken Noodle Soup"
                        },
                        new
                        {
                            Id = 10,
                            MealTypeId = 1,
                            Name = "Mexican Soup"
                        },
                        new
                        {
                            Id = 11,
                            MealTypeId = 2,
                            Name = "Baked Teriyaki Chicken"
                        },
                        new
                        {
                            Id = 12,
                            MealTypeId = 2,
                            Name = "Garlic Chicken"
                        },
                        new
                        {
                            Id = 13,
                            MealTypeId = 2,
                            Name = "Chicken Marsala"
                        },
                        new
                        {
                            Id = 14,
                            MealTypeId = 2,
                            Name = "Maple Salmon"
                        },
                        new
                        {
                            Id = 15,
                            MealTypeId = 2,
                            Name = "Grilled Salmon"
                        },
                        new
                        {
                            Id = 16,
                            MealTypeId = 2,
                            Name = "Slow Cooker Beef Stew"
                        },
                        new
                        {
                            Id = 17,
                            MealTypeId = 2,
                            Name = "Buffalo Chicken Dip"
                        },
                        new
                        {
                            Id = 18,
                            MealTypeId = 2,
                            Name = "Steak"
                        },
                        new
                        {
                            Id = 19,
                            MealTypeId = 2,
                            Name = "Yummy Sweet Potato Casserole"
                        },
                        new
                        {
                            Id = 20,
                            MealTypeId = 2,
                            Name = "Chicken Parmesan"
                        },
                        new
                        {
                            Id = 21,
                            MealTypeId = 3,
                            Name = "Fluffy Pancakes"
                        },
                        new
                        {
                            Id = 22,
                            MealTypeId = 3,
                            Name = "Blueberry Muffins"
                        },
                        new
                        {
                            Id = 23,
                            MealTypeId = 3,
                            Name = "Banana Muffins"
                        },
                        new
                        {
                            Id = 24,
                            MealTypeId = 3,
                            Name = "Apple Pie"
                        },
                        new
                        {
                            Id = 25,
                            MealTypeId = 3,
                            Name = "Brownies"
                        },
                        new
                        {
                            Id = 26,
                            MealTypeId = 3,
                            Name = "Carrot Cake"
                        },
                        new
                        {
                            Id = 27,
                            MealTypeId = 3,
                            Name = "Waffles"
                        },
                        new
                        {
                            Id = 28,
                            MealTypeId = 3,
                            Name = "Peanut Butter Cup Cookies"
                        },
                        new
                        {
                            Id = 29,
                            MealTypeId = 3,
                            Name = "Iced Pumpkin Cookies"
                        },
                        new
                        {
                            Id = 30,
                            MealTypeId = 3,
                            Name = "Chocolate Chip Cookies"
                        });
                });

            modelBuilder.Entity("ThePub.Data.Models.MealOrders", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeclined")
                        .HasColumnType("bit");

                    b.HasKey("OrderId", "MealId");

                    b.HasIndex("MealId");

                    b.ToTable("MealOrders");
                });

            modelBuilder.Entity("ThePub.Data.Models.MealType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MealTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Appetizer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Main"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dessert"
                        });
                });

            modelBuilder.Entity("ThePub.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ThePub.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ordinary"
                        },
                        new
                        {
                            Id = 2,
                            Name = "KnowsTheRightPeople"
                        });
                });

            modelBuilder.Entity("ThePub.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Gosho",
                            LastName = "Goshev",
                            PasswordHash = "H9bsSF1//blxVveY2Vc0VgKLiyDIsfLaKsHU1T6ymgw=",
                            RoleId = 1,
                            UserName = "gosho_goshev"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Pesho",
                            LastName = "Peshov",
                            PasswordHash = "cKLnB3Nc47pfA8o7esDe5OBD8jei3u3pvaBhXJICg9o=",
                            RoleId = 2,
                            UserName = "pesho_peshov"
                        });
                });

            modelBuilder.Entity("ThePub.Data.Models.Meal", b =>
                {
                    b.HasOne("ThePub.Data.Models.MealType", "MealType")
                        .WithMany("Meals")
                        .HasForeignKey("MealTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ThePub.Data.Models.MealOrders", b =>
                {
                    b.HasOne("ThePub.Data.Models.Meal", "Meal")
                        .WithMany("MealOrders")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThePub.Data.Models.Order", "Order")
                        .WithMany("MealOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ThePub.Data.Models.Order", b =>
                {
                    b.HasOne("ThePub.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ThePub.Data.Models.User", b =>
                {
                    b.HasOne("ThePub.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
